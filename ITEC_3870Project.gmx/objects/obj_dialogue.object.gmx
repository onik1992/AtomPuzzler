<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declare dialogue variables

message_current = 0;
timer = 0;
cutoff = 0;
done = false;

//declare alarm timer (in seconds)
alarm[0] = room_speed * 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delayed words event

/*
Alarm is placed before message appears to create a delay.
Gets the message array and outputs words with a delay per character.
On spacebar press, iterates message index and outputs message.

***** (Var_CE01) Variable Change Effect *****
charWidth   -&gt; changes spacing between each character, this will vary depending on font size used.
delay       -&gt; changes speed for character output, the lower the number the quicker.
space       -&gt; changes the padding space.
line        -&gt; changes line position. The higher the value the more the line will descend and vice versa.

*/



//declare font traits
draw_set_font(font_Default);
draw_set_colour(c_black);

//get array length
message_end = array_length_1d(global.message);

//alarm activates
if(alarm[0] = -1) {

    //if message exists
    if (message_end &gt; 0) {
        
        //(Var_CE01)
        var charWidth = 14;
        var delay = 1;
        var lineEnd = 35;
        var line = 0;
        var space = 5;
        var i = 1;
        
        //checks user inputs
        if (keyboard_check_pressed(ord('Z'))) {
        
            if (message_current &lt; message_end - 1 ) {
                message_current++;
                cutoff = 0;
            }
            
            else {
                done = true;
            }
        }
        
        if (cutoff &lt; string_length(global.message[message_current])) {
            if (timer &gt;= delay) {
                cutoff++;
                timer = 0;
            }
            else {
                timer++;
            }
        }
        
        //iterates each chars and displays them until none left.
        while (i &lt;= string_length(global.message[message_current]) &amp;&amp; i &lt;= cutoff) {
            var length = 0;
            
            while (string_char_at(global.message[message_current], i) != " " &amp;&amp; i &lt;= string_length(global.message[message_current])) {
                i++;
                length++;
            }
            
            if (space+length &gt; lineEnd) {
                space = 0;
                line++;
            }
            
            i -= length;
            
            draw_text(x+(space*charWidth), y+(13*line), string_char_at(global.message[message_current], i));
            
            space++;
            i++;
        }

        //draw_text(textX, textY, global.message[message_current]);
           
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
