<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause variables
paused = false;
scrn = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause function

/*
When paused, it creates a screenshot of the game and 
deactivates object "par_pausable".
*/

if(keyboard_check_pressed(ord('P'))) 
{
    paused = !paused;
    
    if(paused) 
    {
        scrn = sprite_create_from_surface(application_surface, view_xview, view_yview, view_wport, view_hport, false, true, 0, 0);
        audio_pause_sound(music_AtomPuzzlerTheme);
        instance_deactivate_object(par_pausable);
    }

    else
    {
        sprite_delete(scrn);
        audio_resume_sound(music_AtomPuzzlerTheme);
        instance_activate_object(par_pausable);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show options when paused
//todo create pause banner for feedback score

if(paused)
{
    width = display_get_gui_width();
    height = display_get_gui_height();
    
    draw_sprite(scrn, 0, 0, 0);
    draw_set_alpha(0.5);
        draw_rectangle(0, 0, width, height, false);
    draw_set_alpha(1);
    
    draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
            //instance_create(width/2, height/2, obj_banner);
            //instance_create(room_width/2 - 120, room_height/2 - 120, obj_pause_menu);
            draw_text(width/2, height/2, "PAUSED");
            //draw_text(width/2, height/2 + 25, "[C]ontinue [R]estart [M]ain Menu [Q]uit");
        draw_set_valign(-1);
    draw_set_halign(-1); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
