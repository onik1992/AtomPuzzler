<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup Log Console Configuration
self.visible = !self.visible;
self.showTime = true;
self.maxLines = 10;
self.logFont = fntScLogFont;

// Initialize Variables
for( var i = 0; i &lt; self.maxLines; i++) 
    self.lines[i] = "";
        
// Write Startup Message (in reverse order)
log(0, "-------------------------");
log(0, " Log Console Initialized");
log(0, " Date: " + string(current_day) + "-" + string(current_month) + "-" + string(current_year));
log(0, " Log Level: Debug");
log(0, " Press F12 to toggle");
log(0, "-------------------------");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw console if visible
if( self.visible ){
    // First render a black box on top of the screen
    draw_set_alpha(0.8);
    draw_set_colour(c_black);
    draw_rectangle(0, 0, room_width, (self.maxLines * 15) + 10,false);

    // Restore Alpha and prepare for drawing text
    draw_set_alpha(1);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_font(self.logFont);
    
    // Actually draw the log lines (color is based on first part of the message
    // not the nicest way but else we need to store additional data which takes
    // up additional memory (it's just not worth it).
    draw_set_color(c_white);
    
    for( var i = 0; i &lt; self.maxLines; i++ ){
        // First determine the color (using position 2 as it starts counting at 1)
        if( string_length(self.lines[i]) &gt; 2 ){
            var checkPos = 11;
            if( string_char_at(self.lines[i], 1) == '[' )
                checkPos = 2;
                
            // Setup Color based and output type
            if( string_char_at(self.lines[i], checkPos) == 'D' ){       // DEBUG
                draw_set_color(c_ltgray);
            }else if( string_char_at(self.lines[i], checkPos) == 'I' ){ // INFO
                draw_set_color(c_white);
            }else if( string_char_at(self.lines[i], checkPos) == 'W' ){ // WARNING
                draw_set_color(c_yellow);
            }else if( string_char_at(self.lines[i], checkPos) == 'E' ){ // ERROR
                draw_set_color(c_red);
            }else if( string_char_at(self.lines[i], checkPos) == ' ' ){ // OVERFLOW
                // Don't Change Anything and retain old color
            }else{
                // Should never happen just to be safe
                draw_set_color(c_purple);
            }
        }
        
        // Next render the string
        draw_text( 5, 5 + (i * 15), self.lines[i] );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="123">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggles the console on and off
self.visible = !self.visible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
